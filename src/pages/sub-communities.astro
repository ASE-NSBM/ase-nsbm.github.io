---
import PageLayout from '@/layouts/PageLayout.astro'
---

<PageLayout
  frontmatter={{
    title: 'ASE Sub Communities',
    description:
      'Join the Association of Software Engineering NSBM sub-communities',
    scrollProgress: true,
    scrollToTop: true,
    activeHeaderLink: 'sub-communities'
  }}
>
  <div class="communities-page">
    <div class="header">
      <h1 class="title">ASE Sub Communities</h1>
      <p class="subtitle">
        Join our vibrant batch communities and connect with fellow Software
        Engineering students
      </p>
    </div>

    <div class="search-container">
      <input
        type="text"
        id="search-input"
        placeholder="Search communities..."
      />
    </div>

    <div class="communities-container">
      <section class="community-section video-section" data-batch="22">
        <div class="video-background">
          <video autoplay muted loop playsinline class="zoom-effect">
            <source src="/uno.mp4" type="video/mp4" />
          </video>
          <div class="overlay"></div>
        </div>
        <div class="video-content">
          <h2 class="section-title">ASE 22 Batch Community</h2>
          <p class="video-text">
            The pioneering batch of ASE NSBM with extensive industry experience
            and mentorship opportunities. Connect with seniors working on
            cutting-edge projects and gain valuable insights into the software
            engineering industry.
          </p>
          <div class="stats light">
            <div class="stat">
              <span class="number">5</span>
              <span class="label">Top Positions</span>
            </div>
            <div class="stat">
              <span class="number">29+</span>
              <span class="label">Applied</span>
            </div>
            <div class="stat">
              <span class="number">13</span>
              <span class="label">Selected</span>
            </div>
          </div>
          <a
            href="https://forms.gle/1tRMxq4r9QsxqUKBA"
            class="apply-button light"
            target="_blank"
          >
            Apply Now
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="16"
              height="16"
              fill="currentColor"
              viewBox="0 0 16 16"
            >
              <path
                fill-rule="evenodd"
                d="M14 2.5a.5.5 0 0 0-.5-.5h-6a.5.5 0 0 0 0 1h4.793L2.146 13.146a.5.5 0 0 0 .708.708L13 3.707V8.5a.5.5 0 0 0 1 0v-6z"
              ></path>
            </svg>
          </a>
        </div>
      </section>

      <section class="community-section" data-batch="23">
        <h2 class="section-title">ASE 23 Batch Community</h2>
        <div class="community-content">
          <div class="community-info">
            <h3>Senior Batch</h3>
            <p>
              A dynamic group of software engineering enthusiasts currently
              exploring advanced programming concepts and collaborative
              development practices. Join this community to participate in
              hackathons, coding competitions, and innovative tech projects.
            </p>
            <div class="stats">
              <div class="stat">
                <span class="number">5</span>
                <span class="label">Top Positions</span>
              </div>
              <div class="stat">
                <span class="number">22+</span>
                <span class="label">Applied</span>
              </div>
              <div class="stat">
                <span class="number">7</span>
                <span class="label">Selected</span>
              </div>
            </div>
            <a
              href="https://forms.gle/EVdYmDuMCNFAADuk8"
              class="apply-button"
              target="_blank"
            >
              Apply to Join
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="16"
                height="16"
                fill="currentColor"
                viewBox="0 0 16 16"
              >
                <path
                  fill-rule="evenodd"
                  d="M14 2.5a.5.5 0 0 0-.5-.5h-6a.5.5 0 0 0 0 1h4.793L2.146 13.146a.5.5 0 0 0 .708.708L13 3.707V8.5a.5.5 0 0 0 1 0v-6z"
                ></path>
              </svg>
            </a>
          </div>
          <div class="community-image">
            <img src="/sub3.jpg" alt="ASE 23 Batch Community" />
          </div>
        </div>
      </section>

      <section class="community-section" data-batch="24">
        <h2 class="section-title">ASE 24 Batch Community</h2>
        <div class="community-content">
          <div class="community-image">
            <img src="/sub2.jpg" alt="ASE 24 Batch Community" />
          </div>
          <div class="community-info">
            <h3>Junior Batch</h3>
            <p>
              The enthusiastic sophomore batch exploring the foundations of
              software engineering with fresh perspectives and innovative ideas.
              Join this vibrant community to collaborate on exciting projects
              and build your network.
            </p>
            <div class="stats">
              <div class="stat">
                <span class="number">5</span>
                <span class="label">Top Positions</span>
              </div>
              <div class="stat">
                <span class="number">20+</span>
                <span class="label">Applied</span>
              </div>
              <div class="stat">
                <span class="number">9</span>
                <span class="label">Selected</span>
              </div>
            </div>
            <a
              href="https://forms.gle/b4ms6Trb7bp7sA6n8"
              class="apply-button"
              target="_blank"
            >
              Apply to Join
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="16"
                height="16"
                fill="currentColor"
                viewBox="0 0 16 16"
              >
                <path
                  fill-rule="evenodd"
                  d="M14 2.5a.5.5 0 0 0-.5-.5h-6a.5.5 0 0 0 0 1h4.793L2.146 13.146a.5.5 0 0 0 .708.708L13 3.707V8.5a.5.5 0 0 0 1 0v-6z"
                ></path>
              </svg>
            </a>
          </div>
        </div>
      </section>

      <section class="community-section" data-batch="25">
        <h2 class="section-title">ASE 25 Batch Community</h2>
        <div class="community-content">
          <div class="community-image">
            <img src="/sub1.jpg" alt="ASE 25 Batch Community" />
          </div>
          <div class="community-info">
            <h3>Freshman Batch</h3>
            <p>
              Our newest members of the ASE family just beginning their software
              engineering journey. Join this welcoming community to get
              oriented, make friends, and start building your foundation in the
              world of software development.
            </p>
            <div class="stats">
              <div class="stat">
                <span class="number">5</span>
                <span class="label">Top Positions</span>
              </div>
              <div class="stat">
                <span class="number">22+</span>
                <span class="label">Applied</span>
              </div>
              <div class="stat">
                <span class="number">7</span>
                <span class="label">Selected</span>
              </div>
            </div>
            <a
              href="https://forms.gle/EZ9G5j4QmEWH6xvN7"
              class="apply-button"
              target="_blank"
            >
              Apply to Join
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="16"
                height="16"
                fill="currentColor"
                viewBox="0 0 16 16"
              >
                <path
                  fill-rule="evenodd"
                  d="M14 2.5a.5.5 0 0 0-.5-.5h-6a.5.5 0 0 0 0 1h4.793L2.146 13.146a.5.5 0 0 0 .708.708L13 3.707V8.5a.5.5 0 0 0 1 0v-6z"
                ></path>
              </svg>
            </a>
          </div>
        </div>
      </section>
    </div>

    <div class="filters desktop-filters">
      <button class="filter-btn active" data-filter="all">All Batches</button>
      <button class="filter-btn" data-filter="22">22 Batch</button>
      <button class="filter-btn" data-filter="23">23 Batch</button>
      <button class="filter-btn" data-filter="24">24 Batch</button>
      <button class="filter-btn" data-filter="25">25 Batch</button>
    </div>

    <div class="mobile-filter-container">
      <button class="mobile-filter-toggle">
        <span class="toggle-icon">All Batches</span>
      </button>
      <div class="mobile-filters">
        <button
          class="mobile-filter-btn active"
          data-filter="all"
          data-position="center">All Batches</button
        >
        <button class="mobile-filter-btn" data-filter="22" data-position="1"
          >22 Batch</button
        >
        <button class="mobile-filter-btn" data-filter="23" data-position="2"
          >23 Batch</button
        >
        <button class="mobile-filter-btn" data-filter="24" data-position="3"
          >24 Batch</button
        >
        <button class="mobile-filter-btn" data-filter="25" data-position="4"
          >25 Batch</button
        >
      </div>
    </div>
  </div>
</PageLayout>

<style>
  :root {
    --primary-color: #2da44e;
    --secondary-color: #0d1117;
    --text-color: #24292f;
    --card-bg: #ffffff;
    --card-border: #d0d7de;
    --section-bg: #f6f8fa;
    --hover-color: #2c974b;
  }

  @media (prefers-color-scheme: dark) {
    :root {
      --primary-color: #3fb950;
      --secondary-color: #010409;
      --text-color: #c9d1d9;
      --card-bg: #0d1117;
      --card-border: #30363d;
      --section-bg: #161b22;
      --hover-color: #46c55a;
    }
  }

  .communities-page {
    width: 100%;
  }

  .header {
    text-align: center;
    margin-bottom: 2rem;
    animation: fadeIn 0.8s ease-in-out;
  }

  .title {
    font-size: 2.5rem;
    color: var(--primary-color);
    margin-bottom: 0.5rem;
  }

  .subtitle {
    font-size: 1.2rem;
    color: var(--text-color);
    opacity: 0.8;
  }

  .search-container {
    margin-bottom: 2rem;
    animation: slideDown 0.5s ease-in-out;
    width: 100%;
  }

  #search-input {
    width: 100%;
    padding: 12px 20px;
    font-size: 1rem;
    border: 1px solid var(--card-border);
    border-radius: 8px;
    background-color: var(--card-bg);
    color: var(--text-color);
    transition: all 0.3s ease;
  }

  #search-input:focus {
    border-color: var(--primary-color);
    box-shadow: 0 0 0 2px rgba(45, 164, 78, 0.2);
    outline: none;
  }

  .communities-container {
    display: flex;
    flex-direction: column;
    gap: 3rem;
    margin-bottom: 5rem;
  }

  .community-section {
    background-color: var(--section-bg);
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);
    transition:
      transform 0.3s ease,
      box-shadow 0.3s ease;
    animation: fadeIn 0.8s ease-in-out;
    position: relative;
  }

  .community-section:hover {
    transform: translateY(-5px);
    box-shadow: 0 12px 40px rgba(0, 0, 0, 0.18);
  }

  .section-title {
    color: var(--primary-color);
    padding: 1.5rem;
    margin: 0;
    font-size: 1.8rem;
    border-bottom: 2px solid var(--primary-color);
    background-color: var(--card-bg);
  }

  .community-content {
    display: flex;
    flex-direction: row;
    min-height: 350px;
  }

  .community-image {
    flex: 1;
    position: relative;
    overflow: hidden;
  }

  .community-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
    transition: transform 0.5s ease;
  }

  .community-section:hover .community-image img {
    transform: scale(1.05);
  }

  .community-info {
    flex: 1;
    padding: 2rem;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  .community-info h3 {
    font-size: 1.5rem;
    color: var(--primary-color);
    margin-top: 0;
    margin-bottom: 1rem;
  }

  .community-info p {
    color: var(--text-color);
    line-height: 1.6;
    margin-bottom: 1.5rem;
  }

  .stats {
    display: flex;
    justify-content: space-around;
    margin: 1.5rem 0;
  }

  .stat {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .stat .number {
    font-size: 1.8rem;
    font-weight: bold;
    color: var(--primary-color);
  }

  .stat .label {
    font-size: 0.9rem;
    color: var(--text-color);
    opacity: 0.8;
  }

  .apply-button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 0.8rem 1.5rem;
    background-color: var(--primary-color);
    color: white;
    text-decoration: none;
    border-radius: 30px;
    font-weight: 600;
    transition: all 0.3s ease;
    margin-top: 1rem;
    gap: 8px;
    align-self: flex-start;
  }

  .apply-button:hover {
    background-color: var(--hover-color);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(45, 164, 78, 0.25);
  }

  .apply-button svg {
    transition: transform 0.2s ease;
  }

  .apply-button:hover svg {
    transform: translateX(3px);
  }

  /* Video section styling */
  .video-section {
    position: relative;
    min-height: 450px;
    color: white;
  }

  .video-background {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    z-index: 0;
  }

  .video-background video {
    position: absolute;
    min-width: 100%;
    min-height: 100%;
    width: auto;
    height: auto;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    object-fit: cover;
  }

  .overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      135deg,
      rgba(13, 17, 23, 0.85) 0%,
      rgba(45, 164, 78, 0.6) 100%
    );
    z-index: 1;
  }

  .video-content {
    position: relative;
    z-index: 2;
    padding: 2rem;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
    height: 100%;
    min-height: 350px;
  }

  .video-text {
    max-width: 700px;
    margin: 1.5rem auto;
    font-size: 1.2rem;
    line-height: 1.7;
  }

  .stats.light {
    display: flex;
    justify-content: space-around;
    margin: 1.5rem 0;
    gap: 2rem; /* Increased gap between stat elements */
  }

  .stats.light .number {
    font-size: 2rem;
  }

  .stats.light .label {
    font-size: 1rem;
    margin-top: 0.3rem;
  }

  .apply-button.light {
    background-color: white;
    color: var(--primary-color);
    align-self: center; /* Center the button horizontally */
    margin-left: auto; /* These two margin properties ensure proper centering */
    margin-right: auto;
  }

  .apply-button.light:hover {
    background-color: #f0f0f0;
    color: var(--hover-color);
  }

  /* Filters styling */
  .filters {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 0.5rem;
    margin: 1rem 0 3rem;
    position: sticky;
    bottom: 20px;
    background-color: var(--card-bg);
    padding: 1rem;
    border-radius: 50px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    z-index: 10;
    animation: slideUp 0.5s ease-in-out;
  }

  .filter-btn {
    background-color: var(--card-bg);
    border: 1px solid var(--card-border);
    color: var(--text-color);
    padding: 0.5rem 1rem;
    border-radius: 30px;
    cursor: pointer;
    transition: all 0.3s ease;
    font-size: 0.9rem;
    font-weight: 500;
  }

  .filter-btn:hover {
    background-color: var(--primary-color);
    color: white;
  }

  .filter-btn.active {
    background-color: var(--primary-color);
    color: white;
    border-color: var(--primary-color);
  }

  /* Mobile squircle navigation */
  .mobile-filter-container {
    display: none;
    position: fixed;
    bottom: 30px;
    left: 50%;
    transform: translateX(-50%);
    z-index: 100;
    width: 300px; /* Control overall container size */
  }

  .mobile-filter-toggle {
    width: 65px;
    height: 65px;
    border-radius: 24px; /* Squircle shape */
    background-color: var(--primary-color);
    border: none;
    color: white;
    font-weight: bold;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    z-index: 101;
    cursor: pointer;
    transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0 12px;
    text-align: center;
  }

  .mobile-filter-toggle .toggle-icon {
    font-size: 0.9rem;
    max-width: 100%;
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
  }

  .mobile-filters {
    position: absolute;
    width: 100%;
    height: 180px;
    bottom: 0;
    left: 0;
    visibility: hidden;
    opacity: 0;
    transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  }

  .mobile-filter-btn {
    position: absolute;
    min-width: 40px;
    min-height: 40px;
    padding: 10px 15px;
    border-radius: 18px; /* Squircle shape */
    background-color: var(--card-bg);
    color: var(--text-color);
    border: none;
    font-size: 0.8rem;
    font-weight: bold;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
    transform: scale(0);
    transition: all 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
    opacity: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .mobile-filter-toggle.active {
    background-color: var(--hover-color);
    transform: translateX(-50%) scale(0.9);
    box-shadow: 0 3px 8px rgba(0, 0, 0, 0.2);
  }

  .mobile-filter-toggle.active + .mobile-filters {
    visibility: visible;
    opacity: 1;
  }

  .mobile-filter-toggle.active + .mobile-filters .mobile-filter-btn {
    opacity: 1;
    transform: scale(1);
  }

  /* Animations */
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes slideDown {
    from {
      opacity: 0;
      transform: translateY(-20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes slideUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes pulse {
    0% {
      box-shadow: 0 0 0 0 rgba(45, 164, 78, 0.7);
    }
    70% {
      box-shadow: 0 0 0 10px rgba(45, 164, 78, 0);
    }
    100% {
      box-shadow: 0 0 0 0 rgba(45, 164, 78, 0);
    }
  }

  /* Media queries for responsive design */
  @media (max-width: 1024px) {
    .community-content {
      flex-direction: column;
    }

    .community-image,
    .community-info {
      flex: auto;
    }

    .community-image {
      height: 250px;
    }
  }

  @media (max-width: 768px) {
    .title {
      font-size: 1.8rem;
    }

    .section-title {
      font-size: 1.5rem;
      padding: 1.2rem;
    }

    .community-info {
      padding: 1.5rem;
    }

    .stats {
      flex-wrap: wrap;
      gap: 1rem;
    }

    .desktop-filters {
      display: none;
    }

    .mobile-filter-container {
      display: block;
    }

    /* Add padding to prevent content from being covered by the filters */
    .communities-page {
      padding-bottom: 100px;
    }

    .video-text {
      font-size: 1rem;
    }

    .community-section {
      margin-bottom: 1rem;
    }
  }

  /* Extra small devices */
  @media (max-width: 480px) {
    .header {
      margin-bottom: 1.5rem;
    }

    .title {
      font-size: 1.5rem;
    }

    .subtitle {
      font-size: 0.9rem;
    }

    .community-info h3 {
      font-size: 1.3rem;
    }

    .community-info p {
      font-size: 0.9rem;
    }

    .stats .number {
      font-size: 1.5rem;
    }

    .stats .label {
      font-size: 0.8rem;
    }

    .apply-button {
      padding: 0.7rem 1.2rem;
      font-size: 0.9rem;
    }

    .video-text {
      font-size: 0.9rem;
    }

    .community-image {
      height: 200px;
    }
  }

  /* Safe area inset bottom for modern mobile browsers */
  @supports (padding-bottom: env(safe-area-inset-bottom)) {
    .mobile-filter-container {
      bottom: calc(20px + env(safe-area-inset-bottom));
    }
  }

  /* Alternative layout for even and odd sections */
  .community-section:nth-child(even) .community-content {
    flex-direction: row-reverse;
  }

  @media (max-width: 1024px) {
    .community-section:nth-child(even) .community-content {
      flex-direction: column;
    }
  }
</style>

<script>
  // Search functionality
  const searchInput = document.getElementById('search-input')
  const communitySections = document.querySelectorAll('.community-section')

  searchInput.addEventListener('input', (e) => {
    const searchTerm = e.target.value.toLowerCase()

    communitySections.forEach((section) => {
      const sectionText = section.textContent.toLowerCase()
      if (sectionText.includes(searchTerm)) {
        section.style.display = 'block'
      } else {
        section.style.display = 'none'
      }
    })
  })

  // Filter functionality
  const filterButtons = document.querySelectorAll('.filter-btn')

  filterButtons.forEach((button) => {
    button.addEventListener('click', () => {
      // Remove active class from all buttons
      filterButtons.forEach((btn) => btn.classList.remove('active'))

      // Add active class to current button
      button.classList.add('active')

      const filter = button.getAttribute('data-filter')

      // Show/hide sections based on filter
      communitySections.forEach((section) => {
        if (filter === 'all' || section.getAttribute('data-batch') === filter) {
          section.style.display = 'block'
        } else {
          section.style.display = 'none'
        }
      })
    })
  })

  // Mobile filter functionality
  document.addEventListener('DOMContentLoaded', () => {
    const mobileToggle = document.querySelector('.mobile-filter-toggle')
    const mobileFilterBtns = document.querySelectorAll('.mobile-filter-btn')
    const regularFilterBtns = document.querySelectorAll('.filter-btn')

    // Function to position filters in a fan layout
    function positionFilters(activeFilterPosition = 'center') {
      const totalFilters = mobileFilterBtns.length
      const bottomPadding = 75
      const containerWidth = document.querySelector(
        '.mobile-filter-container'
      ).offsetWidth
      const containerHeight =
        document.querySelector('.mobile-filters').offsetHeight

      // Reset any previous visibility changes
      mobileFilterBtns.forEach((b) => {
        b.style.opacity = '1'
        b.style.display = 'flex'
      })

      // Collect buttons that need positioning (exclude active one if it should be centered)
      const buttonsToPosition = [...mobileFilterBtns].filter((btn) => {
        return btn.getAttribute('data-position') !== activeFilterPosition
      })

      // Find the button that should be centered (if any)
      const centerButton = [...mobileFilterBtns].find((btn) => {
        return btn.getAttribute('data-position') === activeFilterPosition
      })

      // If there's a center button, position it
      if (centerButton) {
        centerButton.style.bottom = '0'
        centerButton.style.left = '50%'
        centerButton.style.transform = 'translateX(-50%)'
        centerButton.style.zIndex = '5'
      }

      // Position the other buttons in a fan layout
      if (buttonsToPosition.length) {
        // Calculate the total arc angle in radians (160 degrees in radians)
        const arcAngle = 160 * (Math.PI / 180)
        // Calculate angle between each button
        const angleStep = arcAngle / (buttonsToPosition.length - 1 || 1)
        // Start angle (-80 degrees in radians)
        const startAngle = -80 * (Math.PI / 180)

        // Radius - distance from center point
        const radius = Math.min(containerWidth * 0.38, 130)

        buttonsToPosition.forEach((btn, index) => {
          // Calculate angle for this button
          const angle = startAngle + index * angleStep

          // Calculate position
          const x = radius * Math.cos(angle)
          const y = radius * Math.sin(angle) * -1 // Invert Y (negative goes up)

          // Adjust text size based on content length
          const textLength = btn.textContent.trim().length
          btn.style.fontSize = textLength > 6 ? '0.75rem' : '0.8rem'

          // Calculate optimal button width
          const baseWidth = 40
          const widthPerChar = 7
          const minWidth = 40
          const maxWidth = 80
          const calculatedWidth = Math.min(
            maxWidth,
            Math.max(minWidth, baseWidth + textLength * widthPerChar)
          )

          btn.style.width = `${calculatedWidth}px`
          btn.style.height = `${Math.min(calculatedWidth * 0.7, 45)}px`

          // Set the position
          btn.style.bottom = `${bottomPadding + y}px`
          btn.style.left = `${containerWidth / 2 + x}px`
          btn.style.transform = 'translate(-50%, 0)' // Center horizontally

          // Add staggered animation delays
          btn.style.transitionDelay = `${0.03 * index}s`
        })
      }
    }

    // Toggle mobile filter menu
    mobileToggle.addEventListener('click', () => {
      const isActive = mobileToggle.classList.contains('active')

      if (!isActive) {
        // Find active filter position before opening
        const activeBtn = document.querySelector('.mobile-filter-btn.active')
        const activePosition = activeBtn
          ? activeBtn.getAttribute('data-position')
          : 'center'

        // Position filters before showing them
        positionFilters(activePosition)

        // Add pulse animation when opened
        mobileToggle.style.animation = 'pulse 1s'
        setTimeout(() => {
          mobileToggle.style.animation = ''
        }, 1000)
      }

      // Toggle active state
      mobileToggle.classList.toggle('active')
    })

    // Close mobile filters when clicking outside
    document.addEventListener('click', (event) => {
      const isClickInsideFilterContainer = event.target.closest(
        '.mobile-filter-container'
      )

      if (
        !isClickInsideFilterContainer &&
        mobileToggle.classList.contains('active')
      ) {
        mobileToggle.classList.remove('active')
      }
    })

    // Apply filter when mobile filter button is clicked
    mobileFilterBtns.forEach((btn) => {
      btn.addEventListener('click', () => {
        // Skip if already active
        if (btn.classList.contains('active')) {
          mobileToggle.classList.remove('active')
          return
        }

        // Get the button position for animation
        const btnPosition = btn.getAttribute('data-position')

        // Update mobile UI
        mobileFilterBtns.forEach((b) => b.classList.remove('active'))
        btn.classList.add('active')

        // Update desktop UI for consistency
        const filter = btn.getAttribute('data-filter')
        regularFilterBtns.forEach((b) => {
          if (b.getAttribute('data-filter') === filter) {
            b.classList.add('active')
          } else {
            b.classList.remove('active')
          }
        })

        // Apply the filter
        communitySections.forEach((section) => {
          if (
            filter === 'all' ||
            section.getAttribute('data-batch') === filter
          ) {
            section.style.display = 'block'
          } else {
            section.style.display = 'none'
          }
        })

        // Update toggle button text
        document.querySelector('.toggle-icon').textContent = btn.textContent

        // Auto close the menu after selection
        setTimeout(() => {
          mobileToggle.classList.remove('active')
        }, 500)

        // Reposition for next opening
        setTimeout(() => {
          positionFilters(btnPosition)
        }, 600)
      })
    })

    // Keep mobile and desktop filters in sync
    regularFilterBtns.forEach((btn) => {
      btn.addEventListener('click', () => {
        const filter = btn.getAttribute('data-filter')

        // Update mobile UI
        mobileFilterBtns.forEach((b) => {
          if (b.getAttribute('data-filter') === filter) {
            b.classList.add('active')
            // Prepare position for next toggle
            positionFilters(b.getAttribute('data-position'))
          } else {
            b.classList.remove('active')
          }
        })

        // Update toggle button text
        document.querySelector('.toggle-icon').textContent = btn.textContent
      })
    })

    // Set initial toggle text and prepare positions
    const activeFilter = document.querySelector('.filter-btn.active')
    if (activeFilter) {
      document.querySelector('.toggle-icon').textContent =
        activeFilter.textContent

      // Find and prepare the matching mobile filter
      mobileFilterBtns.forEach((btn) => {
        if (
          btn.getAttribute('data-filter') ===
          activeFilter.getAttribute('data-filter')
        ) {
          btn.classList.add('active')
          positionFilters(btn.getAttribute('data-position'))
        }
      })
    } else {
      positionFilters('center')
    }

    // Lazy load video for better performance
    const videos = document.querySelectorAll('video')

    if ('IntersectionObserver' in window) {
      const videoObserver = new IntersectionObserver(
        (entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              const video = entry.target
              video.play()
              videoObserver.unobserve(video)
            }
          })
        },
        { threshold: 0.1 }
      )

      videos.forEach((video) => {
        videoObserver.observe(video)
      })
    } else {
      // Fallback for browsers that don't support IntersectionObserver
      videos.forEach((video) => {
        video.play()
      })
    }
  })
</script>
